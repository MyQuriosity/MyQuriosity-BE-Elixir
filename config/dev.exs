import Config

# Configure your database
config :data, Data.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "myquriosity_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

config :api, Api.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4002],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "8frL2TOQYzBFeTuLdawq7KpTmqltjELGqWnv4iM+QaGHzKYLZwY/URBIdYEfyy62",
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :api, dev_routes: true

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Enable strict mode later
# {:cmd, "mix credo --strict"},
config :git_hooks,
  auto_install: true,
  verbose: true,
  hooks: [
    pre_commit: [
      tasks: [
        {:cmd, "mix compile --force --all-warnings"},
        {:cmd, "mix format --check-formatted"},
        {:cmd, "mix format"},
        # {:cmd, "mix credo"},
        {:cmd, "mix test --color"},
        {:cmd, "echo 'success!'"}
      ]
    ]
  ]

## configuration for segment
# config :segment, segment_api_token: System.get_env("SEGMENT_API_TOKEN")
